//From master.h//
//-----------------------------------------------------------------------------------------------------------------------
#ifndef MASTER_H
#define MASTER_H
#include <iostream> //
#include <math.h> //

class genData {
      
	private:
		double setA_summation;
		double setB_summation;
	public:
		//setters
		    double setA_summated(double setA[]);
		    double setB_summated(double setB[]);
		//getters
		    double getA_summated(void); //returns the sum
		    double getB_summated(void); //returns the sum
		//constructors
		//others

};
//-----------------------------------------------------------------------------------------------------------------------


//From function.cpp//
//-----------------------------------------------------------------------------------------------------------------------
#include "master.h"
//Member Functions and other functions(outside classes)
//----------------------Member functions (for class)-----------//

double genData :: setA_summated(double setA[]) {
                  
             double aSum = 0.0;
       	     for(int a = 0; a < 10; a++){ //a could be less than any desired arbiturary value or set size in reality for better scalable utility 
                              aSum += setA[a];

		 }


		 setA_summation = aSum; //Setting the parameter-contingent shit as equal in valuation to the private'd setA_summation variable(value)    ----NOT MEMORY ADDRESSES

}

double genData :: setB_summated(double setB[]) {
           double bSum = 0.0; 
	   for(int b = 0; b < 10; b++){
                 bSum += setB[b];
	   }

	   setB_summation = bSum;			   
} 

double genData :: getB_summated() {
        return setB_summation;  
}

double genData :: getA_summated() {
        return setA_summation; 

}

//----------------------------------------------//




#endif

//From main.cpp//
//-----------------------------------------------------------------------------------------------------------------------
#include "master.h" //Headers and thus relevant functions accessible



int main() {

	genData data1; 

int setSize;
double aTotal;
double bTotal;

	double setAvals[10] = {10,20,30,40,50,60,70,80,90,100};
	double setBvals[10] = {5,10,15,20,25,30,35,40,45,50};

	  data1.setA_summated(setAvals);
	  data1.setB_summated(setBvals);

          aTotal = data1.getA_summated();
   std:: cout << "set-a total value: " << aTotal << std:: endl; 
          
          bTotal = data1.getB_summated();
   std:: cout << "set-b total value: " << bTotal << std:: endl;
            
	      


}
